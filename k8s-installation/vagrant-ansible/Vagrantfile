# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

# Load network configuration from network.yml
network_config = YAML.load_file('ansible/inventory/group_vars/network.yml')

# Define resources
RESOURCES = {
  "master" => { "ram" => 2048, "cpu" => 2, "disk" => "50GB" },
  "worker" => { "ram" => 2048, "cpu" => 1, "disk" => "30GB" },
}
JUMP_RAM = 1024
JUMP_DISK = "20GB"

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/jammy64"
  config.ssh.insert_key = false
  config.vm.synced_folder ".", "/home/vagrant/k8s-project"
  
  # Mount Vagrant's insecure keys into the jumpbox
  config.vm.synced_folder "#{Dir.home}/.vagrant.d/insecure_private_keys", "/home/vagrant/vagrant-keys"

  # Master nodes configuration
  network_config['network']['masters'].each_with_index do |master, index|
    config.vm.define master['name'] do |master_node|
      master_node.vm.network "private_network", ip: master['ip']
      master_node.vm.network "forwarded_port", guest: 22, host: 2711 + index, id: "ssh"
      master_node.vm.hostname = master['name']
      master_node.vm.provider "virtualbox" do |vb|
        vb.memory = RESOURCES["master"]["ram"]
        vb.cpus = RESOURCES["master"]["cpu"]
      end
      master_node.vm.provision "shell", path: "provision_common.sh"
    end
  end

  # Worker nodes configuration
  network_config['network']['workers'].each_with_index do |worker, index|
    config.vm.define worker['name'] do |worker_node|
      worker_node.vm.network "private_network", ip: worker['ip']
      worker_node.vm.network "forwarded_port", guest: 22, host: 2721 + index, id: "ssh"
      worker_node.vm.hostname = worker['name']
      worker_node.vm.provider "virtualbox" do |vb|
        vb.memory = RESOURCES["worker"]["ram"]
        vb.cpus = RESOURCES["worker"]["cpu"]
      end
      worker_node.vm.provision "shell", path: "provision_common.sh"
    end
  end

  # Jumpbox configuration (provision LAST)
  config.vm.define "jumpbox" do |jumpbox|
    jumpbox.vm.network "private_network", ip: network_config['network']['jumpbox']['ip']
    jumpbox.vm.network "forwarded_port", guest: 22, host: 2731, id: "ssh"
    jumpbox.vm.hostname = network_config['network']['jumpbox']['name']
    jumpbox.vm.provider "virtualbox" do |vb|
      vb.memory = JUMP_RAM
      vb.cpus = 1
    end
    
    # Run common provisioning on jumpbox too
    jumpbox.vm.provision "shell", path: "provision_common.sh"
    
    # Run jumpbox-specific provisioning
    jumpbox.vm.provision "shell", path: "provision_jumpbox.sh"
    
    # Setup SSH keys for cluster access
    jumpbox.vm.provision "shell", path: "scripts/distribute-ssh-keys.sh"
  end

  # Trigger for cluster provisioning (runs after jumpbox is fully provisioned)
  config.trigger.after :up do |trigger|
    trigger.name = "provision-cluster"
    trigger.info = "Running Ansible to provision Kubernetes cluster"
    trigger.run_remote = {
      inline: "cd /home/vagrant/k8s-project/ansible && ansible-playbook -i inventory/hosts.ini playbooks/cluster.yml"
    }
    trigger.only_on = "jumpbox"
  end

end
