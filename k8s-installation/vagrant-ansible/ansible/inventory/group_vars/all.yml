# Global paths
base_dir: /etc/kubernetes
pki_dir: /var/lib/kubernetes
manifests_dir: "{{ base_dir }}/manifests"
config_dir: "{{ base_dir }}/configs"

# Certificate destination directories
certificate_dirs:
  kubernetes: "{{ pki_dir }}"
  etcd: /etc/etcd
  kubelet: "{{ pki_dir }}"
  kube_proxy: "{{ pki_dir }}"

# etcd settings
etcd_data_dir: /var/lib/etcd
etcd_cert_dir: "{{ certificate_dirs.etcd }}"

# Binary paths
etcd_binary: "{{ paths.artifacts.binaries }}/etcd"
etcdctl_binary: "{{ paths.artifacts.binaries }}/etcdctl"
kube_apiserver_binary: "{{ paths.artifacts.binaries }}/kube-apiserver"
kube_controller_manager_binary: "{{ paths.artifacts.binaries }}/kube-controller-manager"
kube_scheduler_binary: "{{ paths.artifacts.binaries }}/kube-scheduler"
kubelet_binary: "{{ paths.artifacts.binaries }}/kubelet"
kube_proxy_binary: "{{ paths.artifacts.binaries }}/kube-proxy"
runc_binary: "{{ paths.artifacts.binaries }}/runc"
containerd_binary: "{{ paths.artifacts.binaries }}/containerd"
kubectl_binary: "{{ paths.artifacts.binaries }}/kubectl"
flannel_manifest: "{{ paths.artifacts.manifests }}/kube-flannel.yml"

# Kubernetes API server addresses
kubernetes_public_address: "{{ network.masters[0].ip }}"
kubernetes_internal_address: 10.32.0.1

kubelet_cert_file: "kubelet.pem"
kubelet_key_file: "kubelet-key.pem"
kube_proxy_cert_file: "kube-proxy.pem"
kube_proxy_key_file: "kube-proxy-key.pem"
kubelet_args:
  - --config={{ paths.kubernetes.config_dir }}/kubelet-config.yaml
  - --kubeconfig={{ paths.kubernetes.config_dir }}/kubelet.kubeconfig

kube_proxy_args:
  - --config={{ paths.kubernetes.config_dir }}/kube-proxy-config.yaml

# Network settings
service_cidr: 10.96.0.0/12
api_server_port: 6443
api_server_endpoint: https://{{ kubernetes_public_address }}:6443
cluster_name: kubernetes

# System settings
swap_enabled: false
ntp_package: chrony

# Certificate settings
cert_key_size: 2048
cert_expiry: "8760h"

ssh_public_key_path: /home/vagrant/k8s-project/.vagrant/machines/jumpbox/virtualbox/private_key.pub

network:
  masters:
    - ip: 192.168.56.11
      name: master1
  workers:
    - ip: 192.168.56.21
      name: worker1
    - ip: 192.168.56.22
      name: worker2
  jumpbox:
    ip: 192.168.56.40
    name: jumpbox
  pod_cidr: "{{ pod_network_cidr }}"
  service_cidr: 10.96.0.0/12
  dns_service_ip: "{{ service_cidr | ipaddr('10') }}"

common_firewall_ports:
  - 22/tcp
  - 6443/tcp
  - 2379/tcp
  - 2380/tcp
  - 10250/tcp

dns_plugin: "coredns"
cni_plugin: flannel
cni_manifest_paths:
  flannel: "{{ paths.artifacts.manifests }}/kube-flannel.yml"
  calico: "{{ paths.artifacts.manifests }}/calico.yaml"

cni_configs:
  flannel:
    pod_network_cidr: 10.244.0.0/16
  calico:
    pod_network_cidr: 192.168.0.0/16

pod_network_cidr: "{{ cni_configs[cni_plugin].pod_network_cidr }}"
cluster_cidr: "{{ pod_network_cidr }}"

cni_extra_ports:
  flannel:
    - 8472/udp
  calico:
    - 179/tcp
    - 4789/udp

paths:
  artifacts:
    base: "/home/vagrant/k8s-project/ansible/artifacts"
    binaries: "/home/vagrant/k8s-project/ansible/artifacts/binaries"
    certs: "/home/vagrant/k8s-project/ansible/artifacts/certs"
    kubeconfigs: "/home/vagrant/k8s-project/ansible/artifacts/kubeconfigs"
    manifests: "/home/vagrant/k8s-project/ansible/artifacts/manifests"
  kubernetes:
    pki_dir: "{{ pki_dir }}"
    config_dir: "{{ config_dir }}"
    manifests_dir: "{{ manifests_dir }}"
  etcd:
    cert_dir: "{{ certificate_dirs.etcd }}"
    data_dir: "{{ etcd_data_dir }}"

versions:
  kubernetes: "1.34.1"
  etcd: "3.6.4"
  containerd: "2.1.4"
  runc: "1.3.1"
  libseccomp2: "2.5.3-2ubuntu3~22.04.1"
  flannel: "master"
  calico: "3.27.3"
  crictl: "1.34.0"

download_urls:
  kubernetes:
    base: "https://dl.k8s.io/v{{ versions.kubernetes }}/bin/linux/amd64"
    apiserver: "https://dl.k8s.io/v{{ versions.kubernetes }}/bin/linux/amd64/kube-apiserver"
    controller_manager: "https://dl.k8s.io/v{{ versions.kubernetes }}/bin/linux/amd64/kube-controller-manager"
    scheduler: "https://dl.k8s.io/v{{ versions.kubernetes }}/bin/linux/amd64/kube-scheduler"
    kubelet: "https://dl.k8s.io/v{{ versions.kubernetes }}/bin/linux/amd64/kubelet"
    kube_proxy: "https://dl.k8s.io/v{{ versions.kubernetes }}/bin/linux/amd64/kube-proxy"
    kubectl: "https://dl.k8s.io/v{{ versions.kubernetes }}/bin/linux/amd64/kubectl"
  etcd:
    tarball: "https://github.com/etcd-io/etcd/releases/download/v{{ versions.etcd }}/etcd-v{{ versions.etcd }}-linux-amd64.tar.gz"
  crictl:
    tarball: "https://github.com/kubernetes-sigs/cri-tools/releases/download/v{{ versions.crictl }}/crictl-v{{ versions.crictl }}-linux-amd64.tar.gz"
  containerd:
    tarball: "https://github.com/containerd/containerd/releases/download/v{{ versions.containerd }}/containerd-{{ versions.containerd }}-linux-amd64.tar.gz"
  runc:
    binary: "https://github.com/opencontainers/runc/releases/download/v{{ versions.runc }}/runc.amd64"
  libseccomp2:
    deb: "http://archive.ubuntu.com/ubuntu/pool/main/libs/libseccomp/libseccomp2_{{ versions.libseccomp2 }}_amd64.deb"
  manifests:
    flannel: "https://raw.githubusercontent.com/flannel-io/flannel/{{ versions.flannel }}/Documentation/kube-flannel.yml"
    calico: "https://raw.githubusercontent.com/projectcalico/calico/v{{ versions.calico }}/manifests/calico.yaml"

checksums:
  kubernetes:
    apiserver: "sha256:a170577ea20f8c37a522114a259c36ec4ed397482d8f282c265248dedf2216c3"
    controller_manager: "sha256:91b7aa8c599f93515f347d3ee7fb12229a40db0ca02da3e7c5dc96fbca3ad2f3"
    scheduler: "sha256:460f5bc48ef176c82fea3592f66ba71ae5bda376f93d86f7fe44fc4759ac577b"
    kubelet: "sha256:5a72c596c253ea0b0e5bcc6f29903fd41d1d542a7cadf3700c165a2a041a8d82"
    kube_proxy: "sha256:1b1e7d07f45825fc62888913f906bb519d7a08d0323dea94b959579a81d3e139"
    kubectl: "sha256:7721f265e18709862655affba5343e85e1980639395d5754473dafaadcaa69e3"
  etcd:
    tarball: "sha256:4d5f3101daa534e45ccaf3eec8d21c19b7222db377bcfd5e5a9144155238c105"
  crictl:
    tarball: "sha256:a8ff2a3edb37a98daf3aba7c3b284fe0aa5bff24166d896ab9ef64c8913c9f51"
  containerd:
    tarball: "sha256:316d510a0428276d931023f72c09fdff1a6ba81d6cc36f31805fea6a3c88f515"
  runc:
    binary: "sha256:53bfce31ca047e537e0767b21c9d529d4b5b3e1cb9c590ca81654f9a5615d80d"
