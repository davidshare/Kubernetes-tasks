- name: Ensure certificate directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop:
    - "{{ pki_dir }}" # /var/lib/kubernetes
    - "{{ etcd_cert_dir }}" # /etc/etcd (for master nodes)
    - "{{ config_dir }}" # /etc/kubernetes/configs (if needed for kubeconfigs)
  when: >
    (item == pki_dir) or
    (item == etcd_cert_dir and inventory_hostname in groups['masters']) or
    (item == config_dir)

- name: Copy cluster-wide certificates to all nodes
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: root
    group: root
  loop:
    - {
        src: "{{ certificate_dirs.base_path }}/ca.crt",
        dest: "{{ ca_pem }}",
        mode: "0644",
      }
    - {
        src: "{{ certificate_dirs.base_path }}/ca.key",
        dest: "{{ ca_key_pem }}",
        mode: "0600",
      }
    - {
        src: "{{ certificate_dirs.base_path }}/apiserver.crt",
        dest: "{{ kubernetes_pem }}",
        mode: "0644",
      }
    - {
        src: "{{ certificate_dirs.base_path }}/apiserver.key",
        dest: "{{ kubernetes_key_pem }}",
        mode: "0600",
      }
    - {
        src: "{{ certificate_dirs.base_path }}/admin.crt",
        dest: "{{ admin_pem }}",
        mode: "0644",
      }
    - {
        src: "{{ certificate_dirs.base_path }}/admin.key",
        dest: "{{ admin_key_pem }}",
        mode: "0600",
      }
    - {
        src: "{{ certificate_dirs.base_path }}/sa.pub",
        dest: "{{ service_account_pem }}",
        mode: "0644",
      }
    - {
        src: "{{ certificate_dirs.base_path }}/sa.key",
        dest: "{{ service_account_key_pem }}",
        mode: "0600",
      }

- name: Copy control plane certificates to master nodes
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: root
    group: root
  loop:
    - {
        src: "{{ certificate_dirs.base_path }}/kube-controller-manager.crt",
        dest: "{{ kube_controller_manager_pem }}",
        mode: "0644",
      }
    - {
        src: "{{ certificate_dirs.base_path }}/kube-controller-manager.key",
        dest: "{{ kube_controller_manager_key_pem }}",
        mode: "0600",
      }
    - {
        src: "{{ certificate_dirs.base_path }}/kube-scheduler.crt",
        dest: "{{ kube_scheduler_pem }}",
        mode: "0644",
      }
    - {
        src: "{{ certificate_dirs.base_path }}/kube-scheduler.key",
        dest: "{{ kube_scheduler_key_pem }}",
        mode: "0600",
      }
  when: inventory_hostname in groups['masters']

- name: Copy kubelet certificates to worker and master nodes
  ansible.builtin.copy:
    src: "{{ certificate_dirs.base_path }}/kubelet.crt"
    dest: "{{ kubelet_pem }}"
    mode: "0644"
    owner: root
    group: root
  when: inventory_hostname in groups['workers'] or inventory_hostname in groups['masters']

- name: Copy kubelet keys to worker and master nodes
  ansible.builtin.copy:
    src: "{{ certificate_dirs.base_path }}/kubelet.key"
    dest: "{{ kubelet_key_pem }}"
    mode: "0600"
    owner: root
    group: root
  when: inventory_hostname in groups['workers'] or inventory_hostname in groups['masters']

- name: Copy kube-proxy certificates to worker nodes
  ansible.builtin.copy:
    src: "{{ certificate_dirs.base_path }}/kube-proxy.crt"
    dest: "{{ pki_dir }}/kube-proxy.crt"
    mode: "0644"
    owner: root
    group: root
  when: inventory_hostname in groups['workers']

- name: Copy kube-proxy keys to worker nodes
  ansible.builtin.copy:
    src: "{{ certificate_dirs.base_path }}/kube-proxy.key"
    dest: "{{ pki_dir }}/kube-proxy.key"
    mode: "0600"
    owner: root
    group: root
  when: inventory_hostname in groups['workers']

- name: Copy etcd certificates to etcd directory on master nodes
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: root
    group: root
  loop:
    - {
        src: "{{ certificate_dirs.base_path }}/etcd-server.crt",
        dest: "{{ etcd_pem }}",
        mode: "0644",
      }
    - {
        src: "{{ certificate_dirs.base_path }}/etcd-server.key",
        dest: "{{ etcd_key_pem }}",
        mode: "0600",
      }
  when: inventory_hostname in groups['masters']

- name: Verify CA certificate was copied successfully
  ansible.builtin.stat:
    path: "{{ ca_pem }}"
  register: ca_cert
  failed_when: not ca_cert.stat.exists

- name: Verify CA key was copied successfully
  ansible.builtin.stat:
    path: "{{ ca_key_pem }}"
  register: ca_key
  failed_when: not ca_key.stat.exists

- name: Verify Kubernetes certificate was copied successfully
  ansible.builtin.stat:
    path: "{{ kubernetes_pem }}"
  register: k8s_cert
  failed_when: not k8s_cert.stat.exists
